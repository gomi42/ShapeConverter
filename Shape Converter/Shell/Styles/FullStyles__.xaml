<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:ShapeConverter.Shell.Controls"
                    xmlns:local="clr-namespace:ShapeConverter">
    <Color x:Key="DustyGrayColor">#FFA0A0A0</Color>
    <Color x:Key="PressedBackgroundColor">#FF808080</Color>
    <Color x:Key="SelectionBackgroundColor">#FF808080</Color>
    <Color x:Key="ErrorTextColor">#FFBF5D00</Color>
    <Color x:Key="SadTextColor">#FFC6C6C6</Color>
    <Color x:Key="MouseOverTextColor">#FF646464</Color>
    <Color x:Key="NaviButtonBackgroundColor">#FFDDDDDD</Color>
    <Color x:Key="ParameterDeviderColor">#FFACACAC</Color>
    <SolidColorBrush x:Key="DustyGrayBrush"
                     Color="{StaticResource DustyGrayColor}" />
    <SolidColorBrush x:Key="PressedBackgroundBrush"
                     Color="{StaticResource PressedBackgroundColor}" />
    <SolidColorBrush x:Key="ErrorTextBrush"
                     Color="{StaticResource ErrorTextColor}" />
    <SolidColorBrush x:Key="SadTextBrush"
                     Color="{StaticResource SadTextColor}" />
    <SolidColorBrush x:Key="MouseOverTextBrush"
                     Color="{StaticResource MouseOverTextColor}" />
    <SolidColorBrush x:Key="NaviButtonBackgroundBrush"
                     Color="{StaticResource NaviButtonBackgroundColor}" />
    <SolidColorBrush x:Key="ParameterDeviderBrush"
                     Color="{StaticResource ParameterDeviderColor}" />
    <SolidColorBrush x:Key="CheckerBoardBrush1"
                     Color="#FFF9F9F9" />
    <SolidColorBrush x:Key="CheckerBoardBrush2"
                     Color="#FFE6E6E6" />
    <DrawingBrush x:Key="CheckerBoardBrush"
                  Stretch="None"
                  TileMode="Tile"
                  Viewport="0,0,16,16"
                  ViewportUnits="Absolute">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="{StaticResource CheckerBoardBrush1}"
                                     Geometry="M0,0 L8,0 L8,8 L0,8 Z " />
                    <GeometryDrawing Brush="{StaticResource CheckerBoardBrush2}"
                                     Geometry="M8,0 L16,0 L16,8 L8,8 Z " />
                    <GeometryDrawing Brush="{StaticResource CheckerBoardBrush2}"
                                     Geometry="M0,8 L8,8 L8,16 L0,16 Z " />
                    <GeometryDrawing Brush="{StaticResource CheckerBoardBrush1}"
                                     Geometry="M8,8 L8,16 L16,16 L16,8 Z " />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <PathGeometry x:Key="SadIcon"
                  Figures="M73.38086,69.67656 C73.03125,69.23320 64.65293,58.81289 50.00000,58.81289 C35.34707,58.81289 26.96875,69.23301 26.61914,69.67656 L32.75586,74.51172 C32.81797,74.43281 39.09531,66.62539 50.00000,66.62539 C60.77090,66.62539 66.99688,74.20488 67.25664,74.52734 L67.24414,74.51172 L73.38086,69.67656 z M85.35547,14.64453 C75.91152,5.20098 63.35547,0.00000 50.00000,0.00000 C36.64453,0.00000 24.08848,5.20098 14.64453,14.64453 C5.20098,24.08848 0.00000,36.64453 0.00000,50.00000 C0.00000,63.35547 5.20098,75.91172 14.64453,85.35547 C24.08848,94.79902 36.64453,100.00000 50.00000,100.00000 C63.35547,100.00000 75.91152,94.79902 85.35547,85.35547 C94.79902,75.91172 100.00000,63.35547 100.00000,50.00000 C100.00000,36.64453 94.79902,24.08848 85.35547,14.64453 z M50.00000,92.18750 C26.73770,92.18750 7.81250,73.26230 7.81250,50.00000 C7.81250,26.73770 26.73770,7.81250 50.00000,7.81250 C73.26230,7.81250 92.18750,26.73770 92.18750,50.00000 C92.18750,73.26230 73.26230,92.18750 50.00000,92.18750 z M39.06250,35.17969 C39.06250,38.63147 36.26428,41.42969 32.81250,41.42969 C29.36072,41.42969 26.56250,38.63147 26.56250,35.17969 C26.56250,31.72791 29.36072,28.92969 32.81250,28.92969 C36.26428,28.92969 39.06250,31.72791 39.06250,35.17969 z M73.43750,35.17969 C73.43750,38.63147 70.63928,41.42969 67.18750,41.42969 C63.73572,41.42969 60.93750,38.63147 60.93750,35.17969 C60.93750,31.72791 63.73572,28.92969 67.18750,28.92969 C70.63928,28.92969 73.43750,31.72791 73.43750,35.17969 z" />
    <PathGeometry x:Key="CopyIcon"
                  Figures="M50.00000,0.00000 C22.27273,0.00000 0.00000,22.27273 0.00000,50.00000 C0.00000,77.72727 22.27273,100.00000 50.00000,100.00000 C77.72727,100.00000 100.00000,77.72727 100.00000,50.00000 C100.00000,22.27273 77.72727,0.00000 50.00000,0.00000 z M63.63636,75.00000 C63.63636,76.36364 62.72727,77.27273 61.36364,77.27273 L25.00000,77.27273 C23.63636,77.27273 22.72727,76.36364 22.72727,75.00000 L22.72727,38.63636 C22.72727,37.27273 23.63636,36.36364 25.00000,36.36364 L61.36364,36.36364 C62.72727,36.36364 63.63636,37.27273 63.63636,38.63636 L63.63636,75.00000 z M77.27273,61.36364 C77.27273,62.72727 76.36364,63.63636 75.00000,63.63636 L70.45455,63.63636 C69.09091,63.63636 68.18182,62.72727 68.18182,61.36364 L68.18182,32.95455 C68.18182,32.27273 67.72727,31.81818 67.04545,31.81818 L38.63636,31.81818 C37.27273,31.81818 36.36364,30.90909 36.36364,29.54545 L36.36364,25.00000 C36.36364,23.63636 37.27273,22.72727 38.63636,22.72727 L75.00000,22.72727 C76.36364,22.72727 77.27273,23.63636 77.27273,25.00000 L77.27273,61.36364 z" />
    <PathGeometry x:Key="CheckerboardOffIcon"
                  Figures="M0,0 L20,0 L20,20 L0,20 z M1,1 L19,1 L19,19 L1,19 z" />
    <PathGeometry x:Key="CheckerboardOnIcon"
                  Figures="M0,0 L20,0 L20,20 L0,20 z M10,1 L19,1 L19,10 L10,10 z M1,10 L10,10 L10,19 L1,19 z" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <Style x:Key="BorderlessTextBoxStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border>
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                        </Border.Background>
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonTabItemStyle"
           TargetType="{x:Type TabItem}">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="Border"
                                Margin="-1,0,0,0"
                                Background="{StaticResource NaviButtonBackgroundBrush}"
                                BorderBrush="{StaticResource DustyGrayBrush}"
                                BorderThickness="1">
                            <ContentPresenter x:Name="ContentSite"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource SelectionBackgroundColor}"
                                                        Duration="0" />
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        To="{StaticResource SelectionBackgroundColor}"
                                                        Duration="0" />
                                        <ColorAnimation Storyboard.TargetName="ContentSite"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="White"
                                                        Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ButtonTabItemStyle}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <local:UniformTabPanel x:Name="HeaderPanel"
                                               Grid.Row="0"
                                               Margin="1,0,0,0"
                                               VerticalAlignment="Top"
                                               Panel.ZIndex="1"
                                               IsItemsHost="True"
                                               KeyboardNavigation.TabIndex="1" />
                        <Border x:Name="Border"
                                Grid.Row="1"
                                Background="White"
                                BorderBrush="#FFABABB3"
                                BorderThickness="1,0,1,1"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentControl x:Name="PART_SelectedContentHost"
                                            Content="{TemplateBinding SelectedContent}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Icon">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="28" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="2"
                                   Fill="Transparent" />
                        <Ellipse Width="18"
                                 Height="18"
                                 Fill="White"
                                 Stroke="#FF909090"
                                 StrokeThickness="1" />
                        <Path x:Name="CheckedIndicator"
                              Width="10"
                              Height="10"
                              Data="M0,30 L 25,50 L58,0"
                              Stretch="Uniform"
                              Stroke="#FF909090"
                              StrokeThickness="2"
                              Visibility="Visible" />
                        <TextBlock Grid.Column="1"
                                   VerticalAlignment="Center"
                                   Text="{TemplateBinding Content}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.6"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.4"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates" />
                            <VisualStateGroup x:Name="ValidationStates" />
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CopyButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Height" Value="23" />
        <Setter Property="Width" Value="23" />
        <Setter Property="ToolTip" Value="Copy to Clipboard" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Icon">
                        <Rectangle Fill="Transparent" />
                        <Path Data="{StaticResource CopyIcon}"
                              Fill="#FF979797"
                              Stretch="Uniform"
                              Visibility="Visible" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.8"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.6"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.4"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates" />
                            <VisualStateGroup x:Name="ValidationStates" />
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TransparentButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadioButtonLeft"
           TargetType="{x:Type RadioButton}">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Border x:Name="Background"
                                Margin="0"
                                Background="{StaticResource NaviButtonBackgroundBrush}"
                                BorderBrush="{StaticResource DustyGrayBrush}"
                                BorderThickness="1"
                                CornerRadius="12,0,0,12" />
                        <Border x:Name="PressedBackground"
                                Margin="0"
                                Background="{StaticResource PressedBackgroundBrush}"
                                BorderBrush="{StaticResource PressedBackgroundBrush}"
                                BorderThickness="1"
                                CornerRadius="12,0,0,12"
                                Visibility="Collapsed" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Border x:Name="DisabledVisualElement"
                                Margin="0,0,1,0"
                                Background="#FFFFFFFF"
                                IsHitTestVisible="false"
                                Opacity="0"
                                Visibility="Visible" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackground"
                                                                       Storyboard.TargetProperty="(Shape.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Background"
                                                            Storyboard.TargetProperty="BorderThickness"
                                                            To="0,0,0,0"
                                                            Duration="0" />
                                        <ColorAnimation Storyboard.TargetName="Background"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource SelectionBackgroundColor}"
                                                        Duration="0" />
                                        <ColorAnimation Storyboard.TargetName="Background"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        To="{StaticResource SelectionBackgroundColor}"
                                                        Duration="0" />
                                        <ColorAnimation Storyboard.TargetName="contentPresenter"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="White"
                                                        Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadioButtonRight"
           TargetType="{x:Type RadioButton}">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Border x:Name="Background"
                                Margin="0"
                                Background="{StaticResource NaviButtonBackgroundBrush}"
                                BorderBrush="{StaticResource DustyGrayBrush}"
                                BorderThickness="0,1,1,1"
                                CornerRadius="0,12,12,0" />
                        <Border x:Name="PressedBackground"
                                Margin="0"
                                Background="{StaticResource PressedBackgroundBrush}"
                                BorderBrush="{StaticResource PressedBackgroundBrush}"
                                BorderThickness="1"
                                CornerRadius="0,12,12,0"
                                Visibility="Collapsed" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="0,0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Border x:Name="DisabledVisualElement"
                                Margin="1,0,0,0"
                                Background="#FFFFFFFF"
                                IsHitTestVisible="false"
                                Opacity="0"
                                Visibility="Visible" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackground"
                                                                       Storyboard.TargetProperty="(Shape.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Background"
                                                            Storyboard.TargetProperty="BorderThickness"
                                                            To="0,0,0,0"
                                                            Duration="0" />
                                        <ColorAnimation Storyboard.TargetName="Background"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource SelectionBackgroundColor}"
                                                        Duration="0" />
                                        <ColorAnimation Storyboard.TargetName="Background"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        To="{StaticResource SelectionBackgroundColor}"
                                                        Duration="0" />
                                        <ColorAnimation Storyboard.TargetName="contentPresenter"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="White"
                                                        Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckerboardToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Show/Hide Checkerboard" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Icon">
                        <Ellipse Fill="#FF979797" />
                        <Path x:Name="CheckedIndicator"
                              Margin="6"
                              Data="{StaticResource CheckerboardOnIcon}"
                              Fill="#FFEAEAEA"
                              Stretch="Uniform"
                              Visibility="Visible" />
                        <Path x:Name="UncheckedIndicator"
                              Margin="6"
                              Data="{StaticResource CheckerboardOnIcon}"
                              Fill="White"
                              Stretch="Uniform"
                              Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.8"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.6"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates" />
                            <VisualStateGroup x:Name="ValidationStates" />
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedIndicator"
                                                                       Storyboard.TargetProperty="(Shape.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedIndicator"
                                                                       Storyboard.TargetProperty="(Shape.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedIndicator"
                                                                       Storyboard.TargetProperty="(Shape.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedIndicator"
                                                                       Storyboard.TargetProperty="(Shape.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="fsfs"
           TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Ellipse Width="18"
                                         Height="18"
                                         Fill="White"
                                         Stroke="#FF909090"
                                         StrokeThickness="1" />
                                <Path x:Name="CheckMark"
                                      Width="10"
                                      Height="10"
                                      Margin="0,1,0,0"
                                      Data="M0,30 L 25,50 L58,0"
                                      Stretch="Uniform"
                                      Stroke="#FF909090"
                                      StrokeThickness="2"
                                      Visibility="Visible" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:Header}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Header}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Text="{TemplateBinding Text}" />
                        <Rectangle Grid.Column="1"
                                   Height="1"
                                   Margin="3,12,0,0"
                                   VerticalAlignment="Top"
                                   Fill="#FFC0C0C0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ColorPrecisionLabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="19" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border x:Name="Border"
                            Height="{TemplateBinding Height}"
                            Padding="7,0"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="#FFF7F7F5"
                            BorderBrush="#FFEADEBE"
                            BorderThickness="1"
                            CornerRadius="9">
                        <TextBlock Margin="0,0,0,2"
                                   VerticalAlignment="Top"
                                   Foreground="{StaticResource ErrorTextBrush}"
                                   Text="{TemplateBinding Content}"
                                   TextWrapping="Wrap" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="Border" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter TargetName="Border" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0</Geometry>
    <Style x:Key="ComboBoxReadonlyToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent">
                        <Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                              HorizontalAlignment="Right">
                            <Path Name="Arrow"
                                  Margin="0,4,0,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{StaticResource DownArrowGeometry}"
                                  Stroke="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Stroke" Value="#FFCDCDCD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:LabelComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LabelComboBox}">
                    <Grid Name="MainGrid"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>
                        <Popup Name="PART_Popup"
                               Grid.ColumnSpan="2"
                               Margin="1"
                               AllowsTransparency="true"
                               IsOpen="{Binding Path=IsDropDownOpen,
                                                RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               VerticalOffset="-9">
                            <Border Padding="9">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="9"
                                                      ShadowDepth="3"
                                                      Color="#FFDEDEDE" />
                                </Border.Effect>
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                                        BorderThickness="1">
                                    <ScrollViewer Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Width="0"
                                                    Height="0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top">
                                                <Rectangle Name="OpaqueRect"
                                                           Width="{Binding ElementName=DropDownBorder,
                                                                           Path=ActualWidth}"
                                                           Height="{Binding ElementName=DropDownBorder,
                                                                            Path=ActualHeight}"
                                                           Fill="{Binding ElementName=DropDownBorder,
                                                                          Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                        <TextBlock Margin="0,3,0,0"
                                   Text="{TemplateBinding Label}" />
                        <ToggleButton x:Name="ToggleButton"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="2"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      IsChecked="{Binding Path=IsDropDownOpen,
                                                          Mode=TwoWay,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxReadonlyToggleButton}" />
                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{StaticResource MouseOverTextBrush}" />
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{StaticResource MouseOverTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainViewLayoutStyle"
           TargetType="HeaderedContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="38" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentPresenter ContentSource="Header" />
                        <Rectangle Height="1"
                                   VerticalAlignment="Bottom"
                                   Fill="{StaticResource ParameterDeviderBrush}" />
                        <ContentPresenter Grid.Row="1"
                                          ContentSource="Content" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>